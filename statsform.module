<?php
require_once('Array2XML.php');
//=============================================================================
/**
 * Implements hook_menu().
 */
function statsform_menu() {
  $items = array();
  
  $items['services/statsformLogin'] = array(
    'title' => 'Stats Form Login Chooser',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('statsform_page_one'),
    'access callback' => TRUE,
    'description' => 'For statsform use',
  );

  $items['statsform/form'] = array(
    'title' => 'Stats Form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('statsform_page_one'),
    'access callback' => TRUE,
    'description' => 'For statsform use',
  );

  // Create a path for the login router
  $items['statsform/login'] = array(
    'title' => 'Stats Form Login Router',
    'page callback' => 'login_request_callback',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
 
  // Create a path for the AJAX request
  $items['statsform/ajax'] = array(
    'title' => 'Ajax Request',
    'page callback' => 'ajax_request_callback',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
 
 
  return $items;
}


//=============================================================================
/**
 * Implements hook_page_alter().
 */
function statsform_page_alter(&$page) {


///print_r(arg(0)."------------");
///print_r(arg(1));
///print_r(request_uri());


  if (arg(0) == 'statsform') {
    $page['variables'] = drupal_get_token();
    $page['sf_path'] = drupal_get_path('module', 'statsform');
    $page['#theme'] = 'hijack';
    $page['sfTemplate'] = 'page--hijacked';

    if ( request_uri() !== null && request_uri() ) {

// TEMP - extract from querystring
      // fixed vals for testing
      $sfUnit = "yrl";
      $sfUnitColor = "green";
      $sfServicePoint = "reference";
      $sfServicePointColor = "pink";

      // extract vals from .../login querystring here
// form/statsform/form?sfUnit=Choose%20Library%20Unit&sfServicepoint=Choose%20Service%20Point&sfUnitColor=show%20huge%20ui%20red%20button&sfServicePointColor=show%20huge%20ui%20basic%20black%20left%20pointing%20label

      // retrieve selection details
      $delimiter_text1 = "=";
      $delimiter_text2 = "&";
      $encoded_space = '/\%20/';
      $regular_space = ' ';

      // unencode querystring to send the values to the template
      $qstring = request_uri();
      $qstring = preg_replace($encoded_space, $regular_space, $qstring);

      $exploded_qstring = explode ( $delimiter_text1, $qstring );

      $sfUnit = $exploded_qstring[1];
      $sfServicePoint = $exploded_qstring[2];
      $sfUnitColor = $exploded_qstring[3];
      $sfServicePointColor = $exploded_qstring[4];

      $exploded_qstring1 = explode ( $delimiter_text2, $sfUnit );
      $sfUnit = $exploded_qstring1[0];

      $exploded_qstring2 = explode ( $delimiter_text2, $sfServicePoint );
      $sfServicePoint = $exploded_qstring2[0];

      // extract color if necessary else just use it (it is already the only value in the array element)
      if( preg_match("/\&/", $sfUnitColor) ) {
        $exploded_qstring3 = explode ( $delimiter_text2, $sfUnitColor );
        $sfUnitColor = $exploded_qstring3[0];
      }

      if( preg_match("/\&/", $sfServicePointColor) ) {
        $exploded_qstring4 = explode ( $delimiter_text2, $sfServicePointColor );
        $sfServicePointColor = $exploded_qstring4[0];
      }

      // insert vals into .../form template here
      $page['sfUnit'] = $sfUnit;
      $page['sfUnitColor'] = $sfUnitColor;
      $page['sfServicePoint'] = $sfServicePoint;
      $page['sfServicePointColor'] = $sfServicePointColor;
    }

  } else if (arg(1) == 'statsformLogin') {
        $page['sf_path'] = drupal_get_path('module', 'statsform');
        $page['#theme'] = 'hijackLogin'; 
  }
}


//=============================================================================
/**
 * Implements hook_theme().
 */
function statsform_theme($existing, $type, $theme, $path, $sfTemplate) {
  return array(
    'hijack' => array(
#     'variables' => array('output' => 'test21'), // limited scope
      'template' => 'page--hijacked',
      'render element' => 'page',
      'path' => drupal_get_path('module', 'statsform') . '/templates',
    ),
    'hijackLogin' => array(
#     'variables' => array('output' => 'test21'), // limited scope
      'template' => 'page--hijackedLogin',
      'render element' => 'page',
      'path' => drupal_get_path('module', 'statsform') . '/templates',
    ),
  );
}


//=============================================================================
/**
 * Implements hook_form_alter().
 */
//function statsform_form_alter(&$form, &$form_state, $form_id) {
//    //print_r($form_id);
////    print_r("asd".$form['actions']['submit']['#attributes']['class']);
//  if ($form_id = 'statsform_page_one') {
//    //$form['actions']['submit']['#attributes']['class'][] = 'hidden';
//    //$form['actions']['submit']['#attributes'] = array('class' => 'my_class'); 
//    
//    
//    $form['actions']['submit']['#attributes']['class'][] = 'hidden';
//    $form['#attributes']['class'][] = 'hidden';
//    
//    
//    
//    
////    print_r($form['actions']['submit']['#attributes']);
//  }
//}


//=============================================================================
/**
 * Callback function for /statsform/login.
 */
function login_request_callback() {
  if (isset($_POST['statsformToken'])) {
    drupal_goto('statsform/form');







    if (isset($_POST['sfLogout']) && $_POST['sfLogout']) {
      // Return the Logged Out flag and exit
      $response = array(
        'message' => 'sfLoggedOut',
      );
      drupal_json_output($response);
      session_destroy();
      drupal_goto('services/statsformLogin');
      exit;
    } else {
      // Pass the JSON on to the WS and Return the response

      // 1. Set up the JSON here (if needed)
      $sf_xml = "
<Submission>
	<unitID>YRL03</unitID>
	<pointID>01</pointID>
	<dateTime>2017-09-01 14:15</dateTime>
	<operator>drickard1967</operator>
	<timeSpent>5</timeSpent>
	<detailed>true</detailed>
	<stats>
		<typeID>02</typeID>
		<modeID>03</modeID>
		<count>3</count>
	</stats>
	<Referral>
		<text>sent to Professor X for more info</text>
	</Referral>
	<Interaction>
		<topic>linear differential equations</topic>
		<departmentID>79</departmentID>
		<course>Math 305</course>
		<staffFeedback></staffFeedback>
		<patronType>2</patronType>
		<patronFeedback>thanks</patronFeedback>
	</Interaction>
</Submission>
      ";
      $sf_json = array (
        'Submission' => 
        array (
          'unitID' => 'YRL03',
          'pointID' => '01',
          'dateTime' => '2017-09-01 14:15:00',
          'operator' => 'drickard1967',
          'timeSpent' => 5,
          'detailed' => true,
          'stats' => 
          array (
            0 => 
            array (
              'typeID' => '02',
              'modeID' => '03',
              'count' => 3,
            ),
          ),
          'Referral' => 
          array (
            'text' => 'sent to Professor X for more info',
          ),
          'Interaction' => 
          array (
            'topic' => 'linear differential equations',
            'departmentID' => 79,
            'course' => 'Math 305',
            'staffFeedback' => '',
            'patronType' => 2,
            'patronFeedback' => 'thanks',
          ),
        ),
      );
      $sf_params = json_encode($sf_json);

      // 2. Send to WS here
      $sf_url = "https://webservices-test.library.ucla.edu/pss/stats/submit";
      $sf_response2 = drupal_http_request($sf_url, array(
        'method' => 'PUT',
        'data' => $sf_xml,
        'headers' => array('Content-Type' => 'text/xml; charset=UTF-8'),
        ///'headers' => array('Content-Type' => 'application/json')
      ));

      // 3. Return the response
      $sf_response = array(
//        'message' => t($_POST['statsformToken']),
//        'message' => $_POST['statsformInputDatetime'],
//        'message' => $_POST['statsformInputTime'],
//        'message' => $_POST['statsformInputLocation'],
//        'message' => $_POST['statsformInputServicePoint'],
        'message' => $_POST['statsformUserName'],
//        'message' => $_POST['statsformUserMenu'],
      );

      drupal_json_output($sf_response2);
///      $sf_response = array(
/////        'message' => t($_POST['statsformToken']),
/////        'message' => $_POST['statsformInputDatetime'],
/////        'message' => $_POST['statsformInputTime'],
/////        'message' => $_POST['statsformInputLocation'],
/////        'message' => $_POST['statsformInputServicePoint'],
///        'message' => $_POST['statsformUserName'],
/////        'message' => $_POST['statsformUserMenu'],
//////      );
///      drupal_json_output($sf_response);
      exit;
    }
  } else {
    // Return Missing Token message
    $response = array(
      'message' => t('Error #asdf90g: Missing token.'),
    );
    drupal_json_output($response);
    exit;
  }
}


//=============================================================================
/**
 * Callback function for /statsform/ajax.
 */
function ajax_request_callback() {
  if (isset($_POST['statsformToken'])) {
    if (isset($_POST['sfLogout']) && $_POST['sfLogout']) {
      // Return the Logged Out flag and exit
      $response = array(
        'message' => 'sfLoggedOut',
      );
      drupal_json_output($response);
      session_destroy();
//      drupal_goto('user');
      exit;
    } else {
      // Pass the JSON on to the WS and Return the response

      // 1. Set up the JSON here (if needed)
      $sf_xml = "
<Submission>
	<unitID>YRL03</unitID>
	<pointID>01</pointID>
	<dateTime>2017-09-01 14:15</dateTime>
	<operator>drickard1967</operator>
	<timeSpent>5</timeSpent>
	<detailed>true</detailed>
	<stats>
		<typeID>02</typeID>
		<modeID>03</modeID>
		<count>3</count>
	</stats>
	<Referral>
		<text>sent to Professor X for more info</text>
	</Referral>
	<Interaction>
		<topic>linear differential equations</topic>
		<departmentID>79</departmentID>
		<course>Math 305</course>
		<staffFeedback></staffFeedback>
		<patronType>2</patronType>
		<patronFeedback>thanks</patronFeedback>
	</Interaction>
</Submission>
      ";
      $sf_json = array (
        'Submission' => 
        array (
          'unitID' => 'YRL03',
          'pointID' => '01',
          'dateTime' => '2017-09-01 14:15:00',
          'operator' => 'drickard1967',
          'timeSpent' => 5,
          'detailed' => true,
          'stats' => 
          array (
            0 => 
            array (
              'typeID' => '02',
              'modeID' => '03',
              'count' => 3,
            ),
          ),
          'Referral' => 
          array (
            'text' => 'sent to Professor X for more info',
          ),
          'Interaction' => 
          array (
            'topic' => 'linear differential equations',
            'departmentID' => 79,
            'course' => 'Math 305',
            'staffFeedback' => '',
            'patronType' => 2,
            'patronFeedback' => 'thanks',
          ),
        ),
      );
      $sf_params = json_encode($sf_json);

      // 2. Send to WS here
      $sf_url = "https://webservices-test.library.ucla.edu/pss/stats/submit";
      $sf_response2 = drupal_http_request($sf_url, array(
        'method' => 'PUT',
        'data' => $sf_xml,
        'headers' => array('Content-Type' => 'text/xml; charset=UTF-8'),
        ///'headers' => array('Content-Type' => 'application/json')
      ));

      // 3. Return the response
      $sf_response = array(
//        'message' => t($_POST['statsformToken']),
//        'message' => $_POST['statsformInputDatetime'],
//        'message' => $_POST['statsformInputTime'],
//        'message' => $_POST['statsformInputLocation'],
//        'message' => $_POST['statsformInputServicePoint'],
        'message' => $_POST['statsformUserName'],
//        'message' => $_POST['statsformUserMenu'],
      );

      drupal_json_output($sf_response2);
///      $sf_response = array(
/////        'message' => t($_POST['statsformToken']),
/////        'message' => $_POST['statsformInputDatetime'],
/////        'message' => $_POST['statsformInputTime'],
/////        'message' => $_POST['statsformInputLocation'],
/////        'message' => $_POST['statsformInputServicePoint'],
///        'message' => $_POST['statsformUserName'],
/////        'message' => $_POST['statsformUserMenu'],
//////      );
///      drupal_json_output($sf_response);
      exit;
    }
  } else {
    // Return Missing Token message
    $response = array(
      'message' => t('Error #asdf90g: Missing token.'),
    );
    drupal_json_output($response);
    exit;
  }
}


//=============================================================================
/**
 * Callback function for /statsform/form for testing
 */

function statsform_page_one() {
  $sf_path = drupal_get_path('module', 'statsform');
}

